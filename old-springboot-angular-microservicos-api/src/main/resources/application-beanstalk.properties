#spring.datasource.url=jdbc:postgresql://${rds.hostname}:${rds.port}/${rds.db.name}
#spring.datasource.username=${rds.username}
#spring.datasource.password=${rds.password}

spring.datasource.url=jdbc:postgresql://DATASOURCE-AWS-URL
spring.datasource.username=AWS-BD-USER
spring.datasource.password=AWS-BD-PASSWORD

spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=true

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL95Dialect
spring.jpa.properties.hibernate.formatsql=false

server.port=5000
server.servlet.context-path=/microservicos
server.error.include-message=always

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

### POOL DE CONEXOES ###
# numero maximo de milisegundos que um cliente aguardara por uma conexao
spring.datasource.hikari.connection-timeout=20000
# numero minimo de conexoes em standby mantidas pelo HikariCP em conjunto com o Banco de Dados
spring.datasource.hikari.minimum-idle=10
# numero maximo de conexoes que o Hikari pode criar
spring.datasource.hikari.maximum-pool-size=40
# tempo ocioso para conexao
spring.datasource.hikari.idle-timeout=10000
# salvando dados automaticamente no Banco de Dados
spring.datasource.hikari.auto-commit=true
